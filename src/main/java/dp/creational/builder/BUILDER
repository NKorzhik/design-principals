Вирішує проблему, коли при створення іммутабельного(нот шур) класу конструктор класу приймає багато різних параметрів.
//тобто дозволяэ побудувати об'єкт ланцюгом викликів методів, накопичуючи інформацію про об'єкт, який будується.

Можна імпелементувати двома різними способами:
    1. Через інтерфейси (абстрактний клас). Треба використовувати, якщо ієрархія наслідування дозволяє це робити.
    2. Через внутрішний статичний клас. (При тому що зовнішний клас буде іммутабельним).


Прикладом BuilderPattern є StringBuilder (але не на 100%). Також прекрасним прикладом є Calendar.Builder.

На відміну від Prototype, Builder працює з LegacyCode, бо є окремим класом, а не модифікує існуючий.

// Треба мати на увазі той факт, що програміст може викликати не весь список методів для побудови об'єкту, перед
 методом build(). Тоді, в цьому випадку, необхідно викинути помилку.
// Ланцюг викликів не є обов'язковим, але він дуже спрощую життя.